{"version":3,"sources":["db.js","components/HeaderDrawer.js","components/Header.js","components/Navbar.js","components/AddClient.js","components/SelectClient.js","components/SelectShift.js","components/ShiftForm.js","components/ShiftStopwatch.js","components/ShiftTimer.js","components/ExportManager.js","App.js","index.js"],"names":["db","Dexie","version","stores","shifts","clients","self","HeaderDrawer","props","react_default","a","createElement","Drawer","anchor","open","onClose","List","component","ListItem","button","onClick","console","log","Header","state","drawerOpen","toggleDrawer","_this","setState","_this2","this","AppBar","position","style","boxShadow","Toolbar","flexGrow","IconButton","edge","color","aria-label","Menu_default","components_HeaderDrawer","Component","Navbar","react_router_dom","to","activeClassName","AddClient","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","handleAddClient","value","toLowerCase","stop","handleChange","newValue","type","onChange","e","target","withRouter","handleSelect","_ref","clientName","setSelectedClient","history","push","_x","apply","arguments","className","map","client","index","key","name","SelectShift","handleRedirect","path","handleAddShiftByTimer","selectedTempClient","react_router","ShiftForm","calcTime","date","startTime","endTime","start","concat","end","hours","moment","duration","diff","asMinutes","mintuesCalcTime","event","preventDefault","handleAddShift","handleInputChange","defineProperty","format","note","toDashboard","TextField","disabled","id","label","defaultValue","margin","material_ui_pickers_esm","utils","MomentUtils","KeyboardButtonProps","required","ShiftStopwatch","status","runningTime","handleClick","clearInterval","timer","Date","now","setInterval","handleReset","_this$state","ShiftTimer","components_ShiftStopwatch","ExportManager","data","react_csv","filename","headers","App","add","isActive","_ref2","_callee2","formData","timerState","_context2","starttime","endtime","mintuescalctime","_x2","_x3","_ref3","_callee3","_context3","table","then","newList","toConsumableArray","assign","_x4","handleDeleteClient","delete","filter","tempData","selectedUser","lastedShift","stopWatchIsActive","clientsTable","toArray","shiftsTable","lastShift","toCollection","last","Promise","all","results","length","_this3","components_Header","components_Navbar","exact","render","components_SelectClient","SelectShift_SelectShift","components_AddClient","components_ShiftForm","components_ShiftTimer","components_ExportManager","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.534fa804.chunk.js","sourcesContent":["import Dexie from 'dexie';\r\n\r\nconst db = new Dexie('LocalDB');\r\n\r\n// Declare tables, IDs and indexes\r\ndb.version(1).stores({\r\n    shifts: '++id,name, date, starttime, endtime, mintuescalctime, note, isActive',\r\n    clients: '++id, &name',\r\n    self: 'name'\r\n});\r\n\r\nexport default db;","import React from 'react'\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem'\r\n\r\nconst HeaderDrawer = (props) => {\r\n    return (\r\n        <Drawer\r\n            anchor=\"top\"\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n        >\r\n\r\n            <List component='nav'>\r\n                <ListItem button onClick={() => console.log('check')}>\r\n                    Home\r\n                </ListItem>\r\n                <ListItem button onClick={() => console.log('check')}>\r\n                    Clients\r\n                </ListItem>\r\n                <ListItem button onClick={() => console.log('check')}>\r\n                    Shifts\r\n                </ListItem>\r\n                <ListItem button onClick={() => console.log('check')}>\r\n                    Export\r\n                </ListItem>\r\n            </List>\r\n\r\n\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default HeaderDrawer","import React, { Component } from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nimport HeaderDrawer from './HeaderDrawer'\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        drawerOpen: false\r\n    }\r\n\r\n    toggleDrawer = () => {\r\n        this.setState({\r\n            drawerOpen: !this.state.drawerOpen\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AppBar\r\n                position='static'\r\n                style={{\r\n                    boxShadow: 'none'\r\n                }}\r\n            >\r\n                <Toolbar>\r\n                    <h1 style={{\r\n                        flexGrow: 1\r\n                    }}>Raz.</h1>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"Menu\"\r\n                        onClick={() => this.toggleDrawer()}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                    <HeaderDrawer\r\n                        open={this.state.drawerOpen}\r\n                        onClose={this.toggleDrawer}\r\n                    />\r\n                </Toolbar>\r\n            </AppBar >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = () =>\r\n    <nav>\r\n        <NavLink to=\"/\">\r\n            Home\r\n        </NavLink>\r\n        <NavLink\r\n            to=\"/clients/add\"\r\n            activeClassName=\"selectedLink\"\r\n        >\r\n            Add Client\r\n        </NavLink>\r\n        <NavLink\r\n            to=\"/manager/export\"\r\n            activeClassName=\"selectedLink\">\r\n            Export\r\n        </NavLink>\r\n    </nav>\r\n\r\nexport default Navbar","import React, { Component } from 'react';\r\n\r\nclass AddClient extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { value: '' };\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        await this.props.handleAddClient(this.state.value.toLowerCase());\r\n        await this.setState({ value: '' });\r\n    }\r\n\r\n    handleChange = newValue => {\r\n        this.setState({ value: newValue });\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <input type=\"text\" value={this.state.value} onChange={(e) => this.handleChange(e.target.value)} />\r\n            <button type=\"button\" onClick={this.handleSubmit}>Add New Client</button>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default AddClient;\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst SelectClient = (props) => {\r\n\r\n    const handleSelect = async (clientName) => {\r\n        await props.setSelectedClient(clientName)\r\n        await props.history.push('/shifts/select')\r\n    }\r\n\r\n    return (\r\n        <div className=\"clients\">\r\n            <h3>Choose Client</h3>\r\n            <ul className=\"clients__list\">\r\n                {props.clients.map((client, index) =>\r\n                    <li key={index} onClick={() => handleSelect(client.name)}>\r\n                        {client.name}\r\n                    </li>\r\n                )\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default withRouter(SelectClient)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nexport default class SelectShift extends Component {\r\n\r\n    handleRedirect = (path, type) => {\r\n        if (type === 'timer') {\r\n            this.props.handleAddShiftByTimer(this.props.selectedTempClient);\r\n        }\r\n        this.props.history.push(path)\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        if (this.props.selectedTempClient !== null) {\r\n            return (\r\n                <div className=\"shifts\">\r\n                    <button onClick={() => this.handleRedirect('/shifts/timer', 'timer')}>\r\n                        Start Shift Timer\r\n                    </button>\r\n                    <p onClick={() => this.handleRedirect('/shifts/form', 'manual')}>\r\n                        or Add Manually\r\n                    </p>\r\n\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Redirect to='/' />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { withRouter, Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\n\r\n\r\n\r\nclass ShiftForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clientName: props.selectedTempClient,\r\n            date: moment().format(\"YYYY-MM-DD\"),\r\n            startTime: '',\r\n            endTime: '',\r\n            mintuesCalcTime: '',\r\n            note: ''\r\n        };\r\n    }\r\n\r\n    calcTime = (date, startTime, endTime) => {\r\n        var start = `${date} ${startTime}`\r\n        var end = `${date} ${endTime}`\r\n\r\n        var hours = moment\r\n            .duration(moment(end, 'YYYY-MM-DD HH:mm')\r\n                .diff(moment(start, 'YYYY-MM-DD HH:mm'))\r\n            ).asMinutes();\r\n\r\n        this.setState({\r\n            mintuesCalcTime: hours\r\n        })\r\n        // const diff = end.subtract(start);\r\n        // console.log(diff.minutes()) // return hours\r\n        // diff.minutes(); // return minutes\r\n\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        console.log(this.props.history)\r\n        event.preventDefault();\r\n        await this.calcTime(this.state.date, this.state.startTime, this.state.endTime)\r\n        // event.preventDefault();\r\n        await this.props.handleAddShift(this.state, false);\r\n        await this.props.history.push('/')\r\n        // var duration = moment.duration(this.state.startTime.diff(this.state.endTime));\r\n        // console.log(duration)\r\n        // var hours = duration.asHours();\r\n        // event.preventDefault();\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.clientName === null || this.state.toDashboard) {\r\n            return <Redirect to='/' />\r\n        }\r\n        return (\r\n            <div className=\"shifts__form\">\r\n\r\n                <TextField\r\n                    disabled\r\n                    id=\"standard-disabled\"\r\n                    label=\"Client Name\"\r\n                    defaultValue={this.state.clientName}\r\n                    margin=\"normal\"\r\n                />\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                    <KeyboardDatePicker\r\n                        margin=\"normal\"\r\n                        id=\"mui-pickers-date\"\r\n                        label=\"Date picker\"\r\n                        value={this.state.date}\r\n                        onChange={this.handleInputChange}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                    />\r\n                    <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"mui-pickers-time\"\r\n                        label=\"Start Time\"\r\n                        value={this.state.startTime}\r\n                        onChange={this.handleInputChange}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change time',\r\n                        }}\r\n                    />\r\n                    <KeyboardTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"mui-pickers-time\"\r\n                        label=\"End Time\"\r\n                        value={this.state.endTime}\r\n                        onChange={this.handleInputChange}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change time',\r\n                        }}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <TextField\r\n                    name=\"note\"\r\n                    id=\"standard-name\"\r\n                    label=\"Note\"\r\n                    value={this.state.note}\r\n                    onChange={this.handleInputChange}\r\n                    margin=\"normal\"\r\n                />\r\n\r\n                <label>\r\n                    Client:\r\n                    <select name=\"clientName\" value={this.state.clientName || ''} onChange={this.handleInputChange}>\r\n                        {this.props.clients.map(client =>\r\n                            <option key={client.id} value={client.name}>{client.name}</option>\r\n                        )}\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    Date:\r\n          <input\r\n                        name=\"date\"\r\n                        type=\"date\"\r\n                        value={this.state.date}\r\n                        onChange={this.handleInputChange} />\r\n                </label>\r\n                <label>\r\n                    Start Time:\r\n          <input\r\n                        name=\"startTime\"\r\n                        type=\"time\"\r\n                        value={this.state.startTime}\r\n                        onChange={this.handleInputChange}\r\n                        required />\r\n                </label>\r\n                <label>\r\n                    End Time:\r\n          <input\r\n                        name=\"endTime\"\r\n                        type=\"time\"\r\n                        value={this.state.endTime}\r\n                        onChange={this.handleInputChange}\r\n                        required=\"required\" />\r\n                </label>\r\n                <label>\r\n                    Note:\r\n          <input\r\n                        name=\"note\"\r\n                        type=\"text\"\r\n                        value={this.state.note}\r\n                        onChange={this.handleInputChange} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" onClick={this.handleSubmit} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ShiftForm)","import React, { Component } from 'react'\r\n\r\nclass ShiftStopwatch extends Component {\r\n    state = {\r\n        status: false,\r\n        runningTime: 0\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.setState(state => {\r\n            if (state.status) {\r\n                clearInterval(this.timer);\r\n            } else {\r\n                const startTime = Date.now() - this.state.runningTime;\r\n                this.timer = setInterval(() => {\r\n                    this.setState({ runningTime: Date.now() - startTime });\r\n                });\r\n            }\r\n            return { status: !state.status };\r\n        });\r\n    };\r\n\r\n    handleReset = () => {\r\n        this.setState({ runningTime: 0, status: false });\r\n    };\r\n\r\n    render() {\r\n        const { status, runningTime } = this.state;\r\n        return (\r\n            <div>\r\n                <p>{runningTime}ms</p>\r\n                <button onClick={this.handleClick}>{status ? 'Stop' : 'Start'}</button>\r\n                <button onClick={this.handleReset}>Reset</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShiftStopwatch","import React, { Component } from 'react'\r\nimport ShiftStopwatch from '../components/ShiftStopwatch'\r\n\r\nclass ShiftTimer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>{this.props.runningTime}ms</p>\r\n                <button>Start</button>\r\n                <button>Reset</button>\r\n                <ShiftStopwatch />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftTimer","import React, { Component } from \"react\";\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\n\r\nclass ExportManager extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        console.log(this.props.data)\r\n\r\n        const headers = [\r\n            { label: \"Client Name\", key: \"name\" },\r\n            { label: \"Date\", key: \"date\" },\r\n            { label: \"Start Time\", key: \"starttime\" },\r\n            { label: \"End Time\", key: \"endtime\" },\r\n            { label: \"Total Time\", key: \"mintuescalctime\" },\r\n            { label: \"Note\", key: \"note\" },\r\n        ];\r\n\r\n        return (\r\n            <CSVLink\r\n                data={this.props.data}\r\n                filename={\"file.csv\"}\r\n                headers={headers}>Download\r\n            </CSVLink>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExportManager","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom'\nimport moment from 'moment'\n\n// import axios from 'axios';\nimport './App.css';\nimport db from './db'\n\nimport Header from './components/Header'\nimport Navbar from './components/Navbar'\nimport AddClient from './components/AddClient'\nimport SelectClient from './components/SelectClient'\nimport SelectShift from './components/SelectShift'\nimport ShiftForm from './components/ShiftForm';\nimport ShiftTimer from './components/ShiftTimer'\nimport ExportManager from './components/ExportManager'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clients: [],\n      shifts: [],\n      tempData: {\n        selectedUser: null,\n        lastedShift: null\n      },\n      selectedTempClient: null,\n      stopWatchIsActive: false\n    };\n  }\n\n  componentDidMount() {\n    let clientsTable = db.table('clients').toArray()\n    let shiftsTable = db.table('shifts').toArray()\n    let lastShift = db.table('shifts').toCollection().last()\n    Promise.all([clientsTable, shiftsTable, lastShift])\n      .then(results => {\n        let lastShift = false\n        if (results[1].length > 0) {\n          lastShift = results[2]\n        }\n        this.setState({\n          clients: results[0],\n          shifts: results[1],\n          lastShift: lastShift\n        })\n      })\n  }\n\n  handleAddShiftByTimer = async (name) => {\n    await db.shifts.add({\n      name: name,\n      date: moment().format(\"YYYY-MM-DD\"),\n      startTime: moment().format(\"HH:mm\"),\n      isActive: true\n    })\n  }\n\n  handleAddShift = async (formData, timerState) => {\n    await db.shifts.add({\n      name: formData.clientName,\n      date: formData.date,\n      starttime: formData.startTime,\n      endtime: formData.endTime,\n      mintuescalctime: formData.mintuesCalcTime,\n      note: formData.note,\n      isActive: timerState\n    })\n  }\n\n  setSelectedClient = (clientName) => {\n    this.setState({\n      selectedTempClient: clientName\n    })\n  }\n\n  // getClientImg = async (name) => {\n  //   try {\n  //     return await axios.get(`https://autocomplete.clearbit.com/v1/companies/suggest?query=${name}`)\n  //   } catch (error) {\n  //     console.error(error)\n  //   }\n  // }\n\n  handleAddClient = async name => {\n    // const img = await this.getClientImg(name)\n    // img.data.filter(clientName => clientName.name === name)\n    const client = {\n      name\n    };\n    db.table('clients')\n      .add(client)\n      .then((id) => {\n        const newList = [...this.state.clients, Object.assign(client, { id })];\n        this.setState({ clients: newList });\n      });\n  }\n\n  handleDeleteClient = id => {\n    db.table('clients')\n      .delete(id)\n      .then(() => {\n        const newList = this.state.clients.filter((client) => client.id !== id);\n        this.setState({ clients: newList });\n      });\n  }\n\n  render() {\n    console.log(this.props)\n    // if(this.state.selectedClient !== null) {\n    //   return (\n    //     <Redirect exact from=\"/\" to=\"/clients/list\" /> \n    //   )\n    // }\n    return (\n      <div className=\"app\">\n        <Header />\n        <Navbar />\n        <div className=\"container\">\n          {/* {this.state.selectedTempClient !== null ?\n            <Redirect from=\"/\" to=\"/shifts/select\" /> :\n            <Route exact path=\"/\" render={() =>\n              <SelectClient\n                clients={this.state.clients}\n                setSelectedClient={this.setSelectedClient}\n              />\n            } />\n          } */}\n\n          <Route exact path=\"/\" render={() =>\n            <SelectClient\n              clients={this.state.clients}\n              setSelectedClient={this.setSelectedClient}\n            />\n          } />\n\n\n          <Route path=\"/shifts/select\" render={(props) =>\n            <SelectShift\n              selectedTempClient={this.state.selectedTempClient}\n              history={props.history}\n              handleAddShiftByTimer={this.handleAddShiftByTimer}\n            />\n          } />\n\n          <Route path=\"/clients/add\" render={() =>\n            <AddClient\n              handleAddClient={this.handleAddClient}\n            />\n          } />\n\n          <Route path=\"/shifts/form\" render={(props) =>\n            <ShiftForm\n              handleAddShift={this.handleAddShift}\n              selectedTempClient={this.state.selectedTempClient}\n              clients={this.state.clients}\n              history={props.history}\n            />\n          } />\n\n          <Route path=\"/shifts/timer\" render={() =>\n            <ShiftTimer\n              status={this.state.stopWatchIsActive}\n              runningTime={0}\n            />\n          } />\n\n          <Route path=\"/manager/export\" render={() =>\n            <ExportManager\n              data={this.state.shifts}\n            />\n          } />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from './App';\n\n\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root'));"],"sourceRoot":""}